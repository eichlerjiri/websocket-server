#!/usr/bin/env python
import sys

def printError(str):
	print('\033[91m' + str + '\033[0m', file=sys.stderr)

def processFile(infile):
	allocs = {}
	linenum = 0
	for line in infile:
		linenum += 1
		parts = line.strip().split(' ')
		if len(parts) != 4 or (parts[0] != 'A' and parts[0] != 'F'):
			printError('Line ' + str(linenum) + ': Invalid format')
			return False

		key = parts[1] + ' ' + parts[2]
		if parts[0] == 'A':
			if key in allocs:
				print('Line ' + str(linenum) + ': Repeated alloc: ' + key + ' ' + parts[3])
				continue
			allocs[key] = parts[3]
		else:
			if not key in allocs:
				print('Line ' + str(linenum) + ': Free before alloc: ' + key + ' ' + parts[3])
				continue
			del allocs[key]

	if allocs:
		print('Remaining:')
		for key,comment in allocs.items():
			print('\t' + key + ' ' + comment)
	return True

if len(sys.argv) < 2:
	print('Usage: ' + sys.argv[0] + ' <trace.txt file>', file=sys.stderr)
	sys.exit(3)
if len(sys.argv) > 2:
	printError('Too many arguments')
	sys.exit(2)

ret = 0
try:
	with open(sys.argv[1], 'r') as infile:
		if not processFile(infile):
			ret = 1
except OSError as e:
	printError(sys.argv[1] + ': ' + e.strerror)
	ret = 1
except UnicodeDecodeError as e:
	printError(sys.argv[1] + ': ' + str(e))
	ret = 1
sys.exit(ret)
